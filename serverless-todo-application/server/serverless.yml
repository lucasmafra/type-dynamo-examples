service:
  name: type-dynamo-serverless-example

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  environment:
      REGION: ${file(.env.yml):${opt:stage, 'dev'}.REGION}
      DYNAMO_ENDPOINT: ${file(.env.yml):${opt:stage, 'dev'}.DYNAMO_ENDPOINT}
  iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:*
        Resource:
          - "*"
functions:
  createTodo:
    handler: src/api/handlers.createTodo
    events:
      - http:
          method: post
          path: todo
  getTodos:
      handler: src/api/handlers.getTodos
      events:
        - http:
            method: get
            path: todo
  updateTodo:
        handler: src/api/handlers.updateTodo
        events:
          - http:
              method: put
              path: todo/{id}
  deleteTodo:
          handler: src/api/handlers.deleteTodo
          events:
            - http:
                method: delete
                path: todo/{id}
  toggleAllTodos:
          handler: src/api/handlers.toggleAllTodos
          events:
            - http:
                method: put
                path: todo/toggleAll
  deleteCompletedTodos:
            handler: src/api/handlers.deleteCompletedTodos
            events:
              - http:
                  method: delete
                  path: todo/completed

resources:
  Resources:
    TodoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TodoTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  dynamodb:
    start:
      migrate: true
